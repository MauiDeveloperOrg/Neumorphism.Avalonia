<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assists="clr-namespace:Neumorphism.Styles.Assists"
    xmlns:converters="clr-namespace:Neumorphism.Styles.Converters"
    xmlns:animations="clr-namespace:Neumorphism.Styles.Additional.Animations">


    <Styles.Resources>
      <converters:ControlWidthToCornerRadiusConverter x:Key="ControlWidthToCornerRadiusConverter" />
      <converters:ControlWidthToBoxShadowConverter x:Key="ControlWidthToBoxShadowConverter" />
      <converters:WidthMinusValueConverter x:Key="WidthMinusValueConverter" />
      <converters:WidthToRenderTransformConverter x:Key="WidthToRenderTransformConverter" />
      <converters:StringReplaceConverter x:Key="StringReplaceConverter" />
	</Styles.Resources>
    
    
    <!--Regular (no class)-->
    <Style Selector="ToggleSwitch">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="assists:ToggleSwitchAssist.SwitchTrackOnBackground" Value="Transparent" />
        <Setter Property="assists:ToggleSwitchAssist.SwitchTrackOffBackground" Value="Transparent" />
        <Setter Property="assists:SelectionControlAssist.Size" Value="72" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="8 0 8 0" />
        <Setter Property="OffContent" Value="" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <ControlTemplate>
				      <Grid ColumnDefinitions="Auto, Auto, Auto" ClipToBounds="False" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}">
                    <!-- Unused. Left for compability with stupid avalonia control code behind -->
                    <Canvas Name="SwitchKnob"
                            HorizontalAlignment="Left"
                            IsVisible="False" IsHitTestVisible="False"
                            Width="0" Height="0">
                        <Grid Name="MovingKnobs"
                              IsVisible="False" IsHitTestVisible="False"
                              Width="0" Height="0" />
                    </Canvas>
                    <ContentPresenter Grid.Column="0" Name="PART_ContentPresenterLeft"
                            TextBlock.Foreground="{Binding TextBlock.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center" />
                    <Grid Grid.Column="1" ClipToBounds="False">
						<!--Background-->
                        <Border Name="Track" 
                                Opacity="1"
                                HorizontalAlignment="Left"
                                Height="{TemplateBinding Height}"
                                VerticalAlignment="Center"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=2}"
                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:SelectionControlAssist.Size)}"
                                CornerRadius="100" />
                        <Grid Name="ThumbHolder" ClipToBounds="False" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}"
                                HorizontalAlignment="Left" VerticalAlignment="Top">
                            <!--Ripple effect-->
							<Ellipse Name="RippleThumb"
                                        Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOnBackground)}"
                                        Height="18" Width="18"
                                        IsHitTestVisible="False"
                                        Margin="-100"
                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <AdornerLayer>
                                <!--Circle-->
                                <Border Name="Thumb"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        CornerRadius="100"
                                        BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
										Width="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=10}"
                                        Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=10}"
                                        ClipToBounds="False" />
                            </AdornerLayer>
                        </Grid>
                    </Grid>
						        <ContentPresenter Grid.Column="2" Name="PART_ContentPresenterRight"
                                    TextBlock.Foreground="{Binding TextBlock.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
        </Setter>
    </Style>

  <!--Class LeftHeader-->
  <Style Selector="ToggleSwitch.LeftHeader">
  </Style>
  

  <!--Class Outline-->
	<Style Selector="ToggleSwitch.Outline">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
		<Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="assists:ToggleSwitchAssist.SwitchTrackOnBackground" Value="Transparent" />
		<Setter Property="assists:ToggleSwitchAssist.SwitchTrackOffBackground" Value="Transparent" />
		<Setter Property="assists:SelectionControlAssist.Size" Value="82" />
		<Setter Property="BorderThickness" Value="8" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="8 0 8 0" />
		<Setter Property="OffContent" Value="" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Height" Value="28" />
		<Setter Property="Template">
			<ControlTemplate>
				<Grid ColumnDefinitions="Auto,Auto, Auto" ClipToBounds="False" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}">
					<!-- Unused. Left for compability with stupid avalonia control code behind -->
					<Canvas Name="SwitchKnob"
                            HorizontalAlignment="Left"
                            IsVisible="False" IsHitTestVisible="False"
                            Width="0" Height="0">
						<Grid Name="MovingKnobs"
                              IsVisible="False" IsHitTestVisible="False"
                              Width="0" Height="0" />
					</Canvas>
                    <ContentPresenter Grid.Column="0" Name="PART_ContentPresenterLeft"
							TextBlock.Foreground="{Binding TextBlock.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center" />
					<Grid Grid.Column="1" ClipToBounds="False">
						<!--Outline-->
						<Border Name="Outline"
                            Opacity="1"
                            HorizontalAlignment="Left"
                            Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=-12}"
                            VerticalAlignment="Center"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:SelectionControlAssist.Size)}"
                            CornerRadius="100">
                                <!--Background-->
                                <Border Name="Track"
                                    Opacity="1"
                                    HorizontalAlignment="Stretch"
                                    Background="Transparent"
                                    VerticalAlignment="Stretch"
                                    BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=2}"
                                    CornerRadius="100" />
						</Border>
						<Grid Name="ThumbHolder" ClipToBounds="False" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}"
                                HorizontalAlignment="Left" VerticalAlignment="Top">
							<!--Ripple effect-->
							<Ellipse Name="RippleThumb"
                                    Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOnBackground)}"
                                    Height="18" Width="18"
                                    IsHitTestVisible="False"
                                    Margin="-100"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
								<Ellipse.RenderTransform>
									<ScaleTransform ScaleX="1" ScaleY="1" />
								</Ellipse.RenderTransform>
							</Ellipse>
							<AdornerLayer>
								<!--Circle-->
								<Border Name="Thumb"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        CornerRadius="100"
                                        BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
                                        Width="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=10}"
                                        Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=10}"
                                        ClipToBounds="False" />
							</AdornerLayer>
						</Grid>
					</Grid>
					<ContentPresenter Grid.Column="2" Name="PART_ContentPresenterRight"
                            TextBlock.Foreground="{Binding TextBlock.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center" />
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>

	
  
    <Style Selector="ToggleSwitch /template/ Border#Thumb">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    </Style>


    <Style Selector="ToggleSwitch:disabled">
        <Setter Property="Opacity" Value="0.23" />
    </Style>

    <!-- Transitions -->
    <Style Selector="ToggleSwitch:not(:pressed) /template/ Ellipse#RippleThumb">
        <Style.Animations>
            <Animation Duration="0:0:0.2" FillMode="Both">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.28" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    
    <Style Selector="ToggleSwitch:not(.notransitions) /template/ Grid#ThumbHolder">
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="LinearEasing"/>
            </Transitions>
        </Setter>
    </Style>
    
    <Style Selector="ToggleSwitch:not(:checked,.Outline) /template/ Grid#ThumbHolder">
        <Setter Property="RenderTransform" Value="translate(0px,0px)" />
    </Style>
    
	<Style Selector="ToggleSwitch:checked:not(.Outline) /template/ Grid#ThumbHolder">
		<Setter Property="RenderTransform">
        <Setter.Value>
          <MultiBinding Converter="{StaticResource WidthToRenderTransformConverter}">
            <Binding Path="(assists:SelectionControlAssist.Size)" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
		  </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>

  <Style Selector="ToggleSwitch.Outline:not(:checked) /template/ Grid#ThumbHolder">
    <Setter Property="RenderTransform" Value="translate(7px,0px)" />
  </Style>

  <Style Selector="ToggleSwitch.Outline:checked /template/ Grid#ThumbHolder">
    <Setter Property="RenderTransform">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource WidthToRenderTransformConverter}">
          <Binding Path="(assists:SelectionControlAssist.Size)" Converter="{StaticResource WidthMinusValueConverter}" ConverterParameter="7" RelativeSource="{RelativeSource TemplatedParent}"/>
          <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>
    
  <!--Right header content label-->
	<Style Selector="ToggleSwitch:not(:checked,.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterRight">
		<Setter Property="Content">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource StringReplaceConverter}">
					<Binding Path="OffContent" RelativeSource="{RelativeSource TemplatedParent}"/>
					<Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
				</MultiBinding>
			</Setter.Value>
		</Setter>
	</Style>

  <Style Selector="ToggleSwitch:not(:checked,.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="IsVisible" Value="False"/>
  </Style>

	<Style Selector="ToggleSwitch:checked:not(.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterRight">
    <Setter Property="Content">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource StringReplaceConverter}">
					<Binding Path="OnContent" RelativeSource="{RelativeSource TemplatedParent}"/>
					<Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
				</MultiBinding>
			</Setter.Value>
		</Setter>
	</Style>

  <Style Selector="ToggleSwitch:checked:not(.LeftHeader) /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="IsVisible" Value="False"/>
  </Style>
  
  
  <!--LeftHeader content label-->

  <Style Selector="ToggleSwitch.LeftHeader:not(:checked) /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource StringReplaceConverter}">
          <Binding Path="OffContent" RelativeSource="{RelativeSource TemplatedParent}"/>
          <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="ToggleSwitch.LeftHeader:not(:checked) /template/ ContentPresenter#PART_ContentPresenterRight">
    <Setter Property="IsVisible" Value="False"/>
  </Style>

  <Style Selector="ToggleSwitch.LeftHeader:checked /template/ ContentPresenter#PART_ContentPresenterLeft">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource StringReplaceConverter}">
          <Binding Path="OnContent" RelativeSource="{RelativeSource TemplatedParent}"/>
          <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="ToggleSwitch.LeftHeader:checked /template/ ContentPresenter#PART_ContentPresenterRight">
    <Setter Property="IsVisible" Value="False"/>
  </Style>

  
  
	<Style Selector="ToggleSwitch:not(.notransitions) /template/ Border#Thumb">
		<Setter Property="Transitions">
			<Transitions>
				<BrushTransition Property="Background" Duration="0:0:0.25" Easing="LinearEasing"/>
			</Transitions>
		</Setter>
	</Style>

	<Style Selector="ToggleSwitch:not(:checked) /template/ Border#Thumb">
		<Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
	</Style>

    <Style Selector="ToggleSwitch:checked /template/ Border#Thumb">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
    </Style>
  

	<Style Selector="ToggleSwitch.Accent:checked /template/ Border#Thumb">
        <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}" />
    </Style>






	<Style Selector="ToggleSwitch:not(.Outline) /template/ Border#Track">
		<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOffBackground)}" />
	</Style>

	<Style Selector="ToggleSwitch:checked:not(.Outline) /template/ Border#Track">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOnBackground)}" />
    </Style>

	<Style Selector="ToggleSwitch.Outline /template/ Border#Track">
		<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOffBackground)}" />
	</Style>

	<Style Selector="ToggleSwitch.Outline:checked /template/ Border#Track">
		<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ToggleSwitchAssist.SwitchTrackOnBackground)}" />
	</Style>
	
	

	<Style Selector="ToggleSwitch.Accent">
        <Setter Property="assists:ToggleSwitchAssist.SwitchTrackOnBackground"
                Value="{DynamicResource SecondaryHueLightBrush}" />
    </Style>
    
    <Style Selector="ToggleSwitch:disabled">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
</Styles>