<Styles xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:assists="clr-namespace:Neumorphism.Styles.Assists"
        xmlns:styles="clr-namespace:Neumorphism.Styles"
        xmlns:converters="clr-namespace:Neumorphism.Styles.Converters"
        xmlns:controls="clr-namespace:Neumorphism.Styles.Controls"
        xmlns:extensions="clr-namespace:Neumorphism.Styles.Controls.Extensions">

  <Styles.Resources>
    <converters:GetPlatformHotkeyConfigServiceConverter x:Key="GetPlatformHotkeyConfig" />
    <converters:ControlWidthToCornerRadiusConverter x:Key="ControlWidthToCornerRadiusConverter" />
    <converters:ControlWidthToBoxShadowConverter x:Key="ControlWidthToBoxShadowConverter" />
    <converters:WidthMinusValueConverter x:Key="WidthMinusValueConverter" />


    <StreamGeometry x:Key="TextBoxClearButtonData">M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxRevealButtonData">M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxHideButtonData">M2,5.27L3.28,4L20,20.72L18.73,22L15.65,18.92C14.5,19.3 13.28,19.5 12,19.5C7,19.5 2.73,16.39 1,12C1.69,10.24 2.79,8.69 4.19,7.46L2,5.27M12,9A3,3 0 0,1 15,12C15,12.35 14.94,12.69 14.83,13L11,9.17C11.31,9.06 11.65,9 12,9M12,4.5C17,4.5 21.27,7.61 23,12C22.18,14.08 20.79,15.88 19,17.19L17.58,15.76C18.94,14.82 20.06,13.54 20.82,12C19.17,8.64 15.76,6.5 12,6.5C10.91,6.5 9.84,6.68 8.84,7L7.3,5.47C8.74,4.85 10.33,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C12.69,17.5 13.37,17.43 14,17.29L11.72,15C10.29,14.85 9.15,13.71 9,12.28L5.6,8.87C4.61,9.72 3.78,10.78 3.18,12Z</StreamGeometry>

    <ContextMenu x:Key="DefaultTextBoxContextMenu"
                 Name="TextBoxContextMenu"
                 WindowManagerAddShadowHint="False">

      <MenuItem Name="TextBoxContextMenuCutItem"
                Header="Cut"
                Command="{Binding $parent[TextBox].Cut}"
                IsEnabled="{Binding $parent[TextBox].CanCut}"
                InputGesture="{Binding Converter={StaticResource GetPlatformHotkeyConfig}, ConverterParameter=cut}"
                Icon="{extensions:MaterialInternalIcon Kind=MaterialContentCut}" />

      <MenuItem Name="TextBoxContextMenuCopyItem"
                Header="Copy"
                Command="{Binding $parent[TextBox].Copy}"
                IsEnabled="{Binding $parent[TextBox].CanCopy}"
                InputGesture="{Binding Converter={StaticResource GetPlatformHotkeyConfig}, ConverterParameter=copy}"
                Icon="{extensions:MaterialInternalIcon Kind=MaterialContentCopy}" />

      <MenuItem Name="TextBoxContextMenuPasteItem"
                Header="Paste"
                Command="{Binding $parent[TextBox].Paste}"
                IsEnabled="{Binding $parent[TextBox].CanPaste}"
                InputGesture="{Binding Converter={StaticResource GetPlatformHotkeyConfig}, ConverterParameter=paste}"
                Icon="{extensions:MaterialInternalIcon Kind=MaterialContentPaste}" />

      <Separator />

      <MenuItem Name="TextBoxContextMenuSelectAllItem"
                Header="Select All"
                Command="{Binding $parent[TextBox].SelectAll}"
                InputGesture="{Binding Converter={StaticResource GetPlatformHotkeyConfig}, ConverterParameter=selectall}"
                Icon="{extensions:MaterialInternalIcon Kind=MaterialSelectAll}" />
    </ContextMenu>

    <converters:RectangleHollowGeometryConverter x:Key="RectangleHollowGeometry" />
  </Styles.Resources>

  <Style Selector="ContextMenu#TextBoxContextMenu controls|MaterialInternalIcon">
    <Setter Property="Width" Value="24" />
    <Setter Property="Height" Value="24" />
  </Style>


  <!--Regular (no class)-->
  <Style Selector="TextBox">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}"/>
    <Setter Property="SelectionBrush" Value="{DynamicResource MaterialDesignSelection}" />
    <Setter Property="SelectionForegroundBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0,10,0,10" />
    <Setter Property="ContextMenu" Value="{StaticResource DefaultTextBoxContextMenu}" />
    <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
    <Setter Property="FontFamily" Value="avares://Neumorphism.Styles/Fonts/Roboto#Roboto, Arial" />
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Height" Value="50"/>
    <Setter Property="Width" Value="200"/>
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Cursor" Value="Ibeam"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="TextAlignment" Value="Left"/>
    <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Grid RowDefinitions="*, Auto" Margin="0" VerticalAlignment="Top">
          <Border Name="PART_RootBorder" Grid.Row="0" Height="{TemplateBinding Height}"
                Margin="0"
                Cursor="{TemplateBinding Cursor}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=2}"
                CornerRadius="10">
            <Border.Styles>
              <!--Floating watermark anim-->
              <Style
                  Selector="TextBox:focus-within:not(:empty) /template/ TextBlock#floatingWatermark,
                                          TextBox:focus-within /template/ TextBlock#floatingWatermark,
                                          TextBox:not(:empty) /template/ TextBlock#floatingWatermark">
                <Setter Property="Margin" Value="1,-16,1,1" />
                <Setter Property="RenderTransform" Value="scale(0.75)" />
              </Style>

              <Style Selector="TextBox:empty:not(:focus) /template/ TextBlock#floatingWatermark">
                <Setter Property="Margin" Value="10 15 10 0" />
                <Setter Property="RenderTransform" Value="scale(1)" />
              </Style>
            </Border.Styles>
            
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <TextBlock Name="floatingWatermark" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                              IsVisible="{TemplateBinding UseFloatingWatermark}"
                              FontFamily="{TemplateBinding FontFamily}"
                              FontSize="{TemplateBinding FontSize}"
                              FontWeight="{TemplateBinding FontWeight}"
                              FontStyle="{TemplateBinding FontStyle}"
                              Text="{TemplateBinding (assists:TextFieldAssist.Label)}"
                              Foreground="{TemplateBinding Foreground}" Opacity="0.5"
                              RenderTransformOrigin="0, 0" />

              <DataValidationErrors Name="DataValidation">
                <Grid Name="PART_Grid" ColumnDefinitions="Auto,*,Auto" Margin="0,0,0,0" VerticalAlignment="Stretch" Height="{TemplateBinding Height}">
                  <ContentPresenter Grid.Column="0" Content="{TemplateBinding InnerLeftContent}" />
                  <Panel Grid.Column="1" Name="PART_TextRoot" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <ScrollViewer Name="PART_Scroller" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="15,0,15,15"
                                  HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                      <Panel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <TextBlock Name="watermark" Padding="0"
                                    Margin="0"
                                    VerticalAlignment="Stretch"
                                    Foreground="{TemplateBinding Foreground}"
                                    Opacity="0.5"
                                    Text="{TemplateBinding Watermark}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    TextAlignment="{TemplateBinding TextAlignment}"
                                    TextWrapping="{TemplateBinding TextWrapping}"/>
                        <TextPresenter Name="PART_TextPresenter"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Left"
                          Margin="0"
                          TextBox.Foreground="{TemplateBinding Foreground}"
                          TextBox.FontFamily="{TemplateBinding FontFamily}"
                          TextBox.FontSize="{TemplateBinding FontSize}"
                          TextBox.FontWeight="{TemplateBinding FontWeight}"
                          TextBox.FontStyle="{TemplateBinding FontStyle}"
                          Text="{TemplateBinding Text, Mode=TwoWay}"
                          CaretIndex="{TemplateBinding CaretIndex}"
                          SelectionStart="{TemplateBinding SelectionStart}"
                          SelectionEnd="{TemplateBinding SelectionEnd}"
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextWrapping="{TemplateBinding TextWrapping}"
                          PasswordChar="{TemplateBinding PasswordChar}"
                          RevealPassword="{TemplateBinding RevealPassword}"
                          SelectionBrush="{TemplateBinding SelectionBrush}"
                          SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                          CaretBrush="{TemplateBinding CaretBrush}"/>
                      </Panel>
                    </ScrollViewer>
                  </Panel>
                  <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <ContentPresenter Content="{TemplateBinding InnerRightContent}"/>
                    <!--<Border Name="PART_AssistButtonsContainer"/>-->
                  </StackPanel>
                </Grid>
              </DataValidationErrors>

            </Grid>
          </Border>
          <TextBlock Grid.Row="1" Name="HintsTextBlock" Classes="Caption" Margin="0,3,0,0"
                     Text="{TemplateBinding (assists:TextFieldAssist.Hints)}" TextTrimming="CharacterEllipsis" />
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <!-- Feedbacks -->
  <Style Selector="TextBox:disabled /template/ Border#PART_RootBorder">
    <Setter Property="Opacity" Value="0.5" />
  </Style>

  <Style
      Selector="TextBox:focus-within:empty /template/ TextBlock#watermark,
                     TextBox:empty /template/ TextBlock#watermark">
    <Setter Property="IsVisible" Value="True" />
  </Style>
  <Style
      Selector="TextBox:focus-within:not(:empty) /template/ TextBlock#watermark,
                     TextBox:not(:empty) /template/ TextBlock#watermark">
    <Setter Property="IsVisible" Value="False" />
  </Style>

  <Style Selector="TextBox /template/ Border#PART_RootBorder">
    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
  </Style>

  <Style Selector="TextBox:focus-within /template/ styles|MaterialUnderline#PART_Underline">
    <Setter Property="IsExpanded" Value="True" />
  </Style>

  <Style Selector="TextBox:pointerover /template/ styles|MaterialUnderline#PART_Underline">
    <Setter Property="IsActive" Value="True" />
  </Style>

  <!-- Default TextBox style -->
  <Style Selector="TextBox /template/ Panel#PART_TextRoot">
    <Setter Property="Margin" Value="1, 0" />
  </Style>

  <Style Selector="TextBox /template/ TextBlock#floatingWatermark">
    <Setter Property="Foreground" Value="{DynamicResource ThemeAccentBrush}" />
  </Style>

  <Style Selector="TextBox /template/ #PART_Scroller /template/ ScrollBar.Modern /template/ Grid#rootGrid">
    <Setter Property="Margin"
            Value="0 8 0 4" />
  </Style>

  <!-- Default TextBox style -->
  <Style Selector="TextBox[UseFloatingWatermark=True] /template/ Panel#PART_TextRoot">
    <Setter Property="Margin" Value="1, 16, 1, 0" />
  </Style>

  <Style Selector="TextBox[UseFloatingWatermark=False] /template/ Panel#PART_TextRoot">
    <Setter Property="Margin" Value="1, 16, 1, 0" />
  </Style>

  <Style Selector="TextBox[UseFloatingWatermark=True] /template/ Border#PART_RootBorder">
    <Setter Property="MinHeight" Value="48" />
  </Style>

  <!-- Transitions for all styles textfield -->
  <Style
      Selector="TextBox:not(.notransitions) /template/ TextBlock#floatingWatermark,
                     TextBox:not(.notransitions) /template/ Border#watermarkRoot">
    <Setter Property="Transitions">
      <Transitions>
        <ThicknessTransition Duration="0:0:0.25" Property="Margin" Easing="CubicEaseOut" />
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
      </Transitions>
    </Setter>
  </Style>


  <!-- Singeline and wrapping -->
  <Style Selector="TextBox[AcceptsReturn=False] /template/ ScrollViewer#PART_Scroller">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
  </Style>

  <!-- Fixed height multiline -->
  <Style Selector="TextBox[AcceptsReturn=True] /template/ ScrollViewer#PART_Scroller">
    <Setter Property="Width" Value="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30}}" />
    <Setter Property="Height" Value="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30}}" />
  </Style>

  <Style Selector="TextBox[AcceptsReturn=True] /template/ TextPresenter#PART_TextPresenter">
    <Setter Property="Width" Value="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=50}" />
  </Style>



  <!-- Invalid state -->
  <Style Selector="TextBox:error /template/ styles|MaterialUnderline#PART_Underline">
    <Setter Property="BackgroundColor" Value="{DynamicResource ValidationErrorBrush}" />
    <Setter Property="ActiveColor" Value="{DynamicResource ValidationErrorBrush}" />
  </Style>

  <Style Selector="TextBox:error /template/ TextBlock#floatingWatermark">
    <Setter Property="Foreground" Value="{DynamicResource ValidationErrorBrush}" />
  </Style>

  <Style Selector="TextBox:error /template/ TextBlock#HintsTextBlock">
    <Setter Property="IsVisible" Value="False" />
  </Style>




  <!-- Class Filled -->
  <Style Selector="TextBox.Filled">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
  </Style>





  <!-- Class Outline -->
  <Style Selector="TextBox.Outline">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}"/>
    <Setter Property="SelectionBrush" Value="{DynamicResource MaterialDesignSelection}" />
    <Setter Property="SelectionForegroundBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0,10,0,10" />
    <Setter Property="ContextMenu" Value="{StaticResource DefaultTextBoxContextMenu}" />
    <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
    <Setter Property="FontFamily" Value="avares://Neumorphism.Styles/Fonts/Roboto#Roboto, Arial" />
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Height" Value="50"/>
    <Setter Property="Width" Value="245"/>
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="BorderThickness" Value="8"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Cursor" Value="Ibeam"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="TextAlignment" Value="Left"/>
    <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Grid RowDefinitions="*, Auto" Margin="0" VerticalAlignment="Top">
          <Border Name="PART_RootBorder" Grid.Row="0" Height="{TemplateBinding Height}"
                Margin="0"
                Cursor="{TemplateBinding Cursor}"
                Background="{TemplateBinding Background}"
                BorderBrush="Transparent"
                BorderThickness="0"
                BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
                CornerRadius="10">
            <Border.Styles>
              <!--Floating watermark anim-->
              <Style
                  Selector="TextBox:focus-within:not(:empty) /template/ TextBlock#floatingWatermark,
                                          TextBox:focus-within /template/ TextBlock#floatingWatermark,
                                          TextBox:not(:empty) /template/ TextBlock#floatingWatermark">
                <Setter Property="Margin" Value="1,-16,1,1" />
                <Setter Property="RenderTransform" Value="scale(0.75)" />
              </Style>

              <Style Selector="TextBox:empty:not(:focus) /template/ TextBlock#floatingWatermark">
                <Setter Property="Margin" Value="20 15 10 0" />
                <Setter Property="RenderTransform" Value="scale(1)" />
              </Style>
            </Border.Styles>

            <Panel>

              <!--Outline-->
              <Border Name="PART_HoverIndicator" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"
                    Background="Transparent" Padding="0" 
                    BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=2}"
                    CornerRadius="10"/>



              <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Name="floatingWatermark" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                           Classes="Subtitle1" IsVisible="{TemplateBinding UseFloatingWatermark}"
                           FontFamily="{TemplateBinding FontFamily}"
                           FontSize="{DynamicResource FontSizeSmall}"
                           Text="{TemplateBinding (assists:TextFieldAssist.Label)}" Foreground="{TemplateBinding Foreground}" Opacity="0.5"
                           RenderTransformOrigin="0, 0" />

                <DataValidationErrors Name="DataValidation">
                  <Grid Name="PART_Grid" ColumnDefinitions="Auto,*,Auto" Margin="0,20,0,0" VerticalAlignment="Stretch" Height="{TemplateBinding Height}">
                    <ContentPresenter Grid.Column="0" Content="{TemplateBinding InnerLeftContent}"/>
                    <Panel Grid.Column="1" Name="PART_TextRoot" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                      <ScrollViewer Name="PART_Scroller" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="20,0,20,0"
                                    HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                    VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                        <Panel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                          <TextBlock Name="watermark"
									 Padding="0"
                                     Margin="0"
                                     Classes="Subtitle1"
                                     VerticalAlignment="Stretch"
                                     Foreground="{TemplateBinding Foreground}"
                                     Opacity="0.5"
                                     Text="{TemplateBinding Watermark}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     TextAlignment="{TemplateBinding TextAlignment}"
                                     TextWrapping="{TemplateBinding TextWrapping}"/>
                          <TextPresenter Name="PART_TextPresenter"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"
                            Margin="0"
                            Text="{TemplateBinding Text, Mode=TwoWay}"
                            CaretIndex="{TemplateBinding CaretIndex}"
                            SelectionStart="{TemplateBinding SelectionStart}"
                            SelectionEnd="{TemplateBinding SelectionEnd}"
                            TextAlignment="{TemplateBinding TextAlignment}"
                            TextWrapping="{TemplateBinding TextWrapping}"
                            PasswordChar="{TemplateBinding PasswordChar}"
                            RevealPassword="{TemplateBinding RevealPassword}"
                            SelectionBrush="{TemplateBinding SelectionBrush}"
                            SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                            CaretBrush="{TemplateBinding CaretBrush}"/>
                        </Panel>
                      </ScrollViewer>
                    </Panel>
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                      <ContentPresenter Content="{TemplateBinding InnerRightContent}" Margin="0,-9,0,0"/>
                      <!--<Border Name="PART_AssistButtonsContainer"/>-->
                    </StackPanel>
                  </Grid>
                </DataValidationErrors>

              </Grid>
            </Panel>
          </Border>
          <TextBlock Grid.Row="1" Name="HintsTextBlock" Classes="Caption" Margin="0,3,0,0"
                     Text="{TemplateBinding (assists:TextFieldAssist.Hints)}" TextTrimming="CharacterEllipsis" />
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style
      Selector="TextBox.Outline:focus-within:not(:empty) /template/ Border#watermarkRoot,
                     TextBox.Outline:focus-within /template/ Border#watermarkRoot,
                     TextBox.Outline:not(:empty) /template/ Border#watermarkRoot">
    <Setter Property="Margin" Value="14,-8,1,1" />
    <Setter Property="RenderTransform" Value="scale(0.75)" />
  </Style>

  <Style Selector="TextBox.Outline:empty:not(:focus-within) /template/ Border#watermarkRoot">
    <Setter Property="Margin" Value="10,14,1,1" />
    <Setter Property="RenderTransform" Value="scale(1)" />
  </Style>
  <Style Selector="TextBox.Outline.Dense:empty:not(:focus-within) /template/ Border#watermarkRoot">
    <Setter Property="Margin" Value="10,12,1,1" />
  </Style>

  <Style Selector="TextBox.Outline:focus-within /template/ Border#PART_HoverIndicator">
    <Setter Property="BorderBrush" Value="#22000000" />
    <Setter Property="BorderThickness" Value="4" />
  </Style>


  <Style Selector="TextBox.Outline:disabled /template/ Border#PART_Border">
    <Setter Property="Opacity" Value="0.34" />
  </Style>

  <Style Selector="TextBox.Outline /template/ Panel#PART_TextRoot">
    <Setter Property="Margin" Value="0,6,0,6" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style Selector="TextBox.Outline /template/ Grid#PART_RootBorder">
    <Setter Property="MinHeight" Value="52" />
  </Style>

  <!-- Filled dense text field -->
  <Style Selector="TextBox.Outline.Dense /template/ Grid#PART_RootBorder">
    <Setter Property="MinHeight" Value="44" />
  </Style>

  <Style Selector="TextBox.Outline.Dense[UseFloatingWatermark=False] /template/ Grid#PART_RootBorder">
    <Setter Property="MinHeight" Value="40" />
  </Style>

  <Style Selector="TextBox.Outline.Dense[UseFloatingWatermark=False] /template/ Panel#PART_TextRoot">
    <Setter Property="Margin" Value="0, 8" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <!-- Invalid state -->
  <Style Selector="TextBox.Outline:error">
    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
  </Style>

  <!-- Additional decorations for TextFields -->
  <!-- ReSharper disable InconsistentNaming -->
  <Style Selector="TextBox.clearButton, TextBox.revealPasswordButton">
    <Setter Property="InnerRightContent">
      <Template>
        <Border Name="PART_AssistButtonsContainer"/>
      </Template>
    </Setter>
  </Style>

  <Style
      Selector="TextBox.clearButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty) Border#PART_AssistButtonsContainer">
    <Setter Property="Child">
      <Template>
        <Button Name="PART_ClearButton" Margin="0,13,8,0"
                Classes="no-material" Command="{Binding $parent[TextBox].Clear}" Padding="4"
                Cursor="Arrow" Focusable="True" Width="{Binding Path=$self.Height}">
          <controls:MaterialInternalIcon Kind="Close" Width="NaN" Height="NaN" Foreground="{DynamicResource MaterialDesignForeground}" Opacity="0.5" />
        </Button>
      </Template>
    </Setter>
  </Style>

  <Style
      Selector="TextBox.revealPasswordButton Border#PART_AssistButtonsContainer">
    <Setter Property="Child">
      <Template>
        <ToggleButton Name="PART_PasswordRevealToggle" Classes="no-material"
                      BorderThickness="0" Background="Red" Foreground="{DynamicResource MaterialDesignForeground}"
                      assists:ToggleButtonAssist.UncheckedForeground="{DynamicResource MaterialDesignForeground}" Opacity="0.5" Margin="0,13,8,0"
                      Width="{Binding Path=$self.Height}" Cursor="Arrow" Focusable="True" Padding="4"
                      IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=OneWayToSource}">
          <ToggleButton.Styles>
            <Style
                Selector="ToggleButton#PART_PasswordRevealToggle controls|MaterialInternalIcon#PART_PackIconContent">
              <Setter Property="Kind" Value="EyeOutline" />
            </Style>
            <Style
                Selector="ToggleButton#PART_PasswordRevealToggle:checked controls|MaterialInternalIcon#PART_PackIconContent">
              <Setter Property="Kind" Value="EyeOffOutline" />
            </Style>
            <Style Selector="ToggleButton#PART_PasswordRevealToggle[IsChecked=True]">
              <Setter Property="(ToolTip.Tip)" Value="Hide Password" />
            </Style>
            <Style Selector="ToggleButton#PART_PasswordRevealToggle[IsChecked=False]">
              <Setter Property="(ToolTip.Tip)" Value="Show Password" />
            </Style>
          </ToggleButton.Styles>
          <controls:MaterialInternalIcon Name="PART_PackIconContent" Width="NaN" Height="NaN" />
        </ToggleButton>
      </Template>
    </Setter>
  </Style>

  <Style
      Selector="TextBox.Filled Border#PART_AssistButtonsContainer,
    TextBox.Outline Border#PART_AssistButtonsContainer">
    <Setter Property="Height" Value="52" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>
  <Style Selector="TextBox.Dense Border#PART_AssistButtonsContainer">
    <Setter Property="Height" Value="48" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>

  <Style Selector="TextBox.clearButton Button#PART_ClearButton">
    <Setter Property="Height" Value="24" />
  </Style>

  <Style Selector="TextBox.revealPasswordButton ToggleButton#PART_PasswordRevealToggle">
    <Setter Property="Height" Value="24" />
  </Style>

  <Style Selector="TextBox.clearButton[UseFloatingWatermark=true] Button#PART_ClearButton">
    <Setter Property="Margin" Value="4, 14, 0, 4" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

  <Style Selector="TextBox.revealPasswordButton[UseFloatingWatermark=true] ToggleButton#PART_PasswordRevealToggle">
    <Setter Property="Margin" Value="4, 14, 0, 4" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

  <!--<Style
      Selector="TextBox.Filled.clearButton Button#PART_ClearButton, TextBox.Filled.revealPasswordButton ToggleButton#PART_PasswordRevealToggle,
    TextBox.Outline.clearButton Button#PART_ClearButton, TextBox.Outline.revealPasswordButton ToggleButton#PART_PasswordRevealToggle">
    <Setter Property="Height" Value="28" />
    <Setter Property="Margin" Value="0, 0, 8, 0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>-->
  

  <!-- Class Solo -->
  <Style Selector="TextBox.Solo">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="assists:TextFieldAssist.InnerLeftBackground" Value="#22444444"/>
    <Setter Property="assists:TextFieldAssist.InnerRightBackground" Value="#22444444"/>
    <Setter Property="assists:TextFieldAssist.InnerLeftPadding" Value="0"/>
    <Setter Property="assists:TextFieldAssist.InnerRightPadding" Value="0"/>
    <Setter Property="Height" Value="38"/>
    <Setter Property="Width" Value="NaN"/>
    <Setter Property="BorderThickness" Value="0" />
	  <Setter Property="assists:TextFieldAssist.CornerRadius" Value="10"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="PART_RootBorder" Cursor="Ibeam"
                Background="Transparent"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                BorderBrush="{TemplateBinding BorderBrush}"
                CornerRadius="{TemplateBinding assists:TextFieldAssist.CornerRadius}"
                BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=2}"
                BorderThickness="{TemplateBinding BorderThickness}">
          
			<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
            <DataValidationErrors Name="DataValidation">
              <Grid ColumnDefinitions="Auto,*,Auto">
                <Border Grid.Column="0" Background="{TemplateBinding assists:TextFieldAssist.InnerLeftBackground}" CornerRadius="10 0 0 10" VerticalAlignment="Stretch">
                    <ContentPresenter Background="Transparent" Content="{TemplateBinding InnerLeftContent}" Padding="{TemplateBinding assists:TextFieldAssist.InnerLeftPadding}" HorizontalContentAlignment="Left" />
                </Border>
                <Grid Grid.Column="1" Name="PART_InnerRoot" Margin="8">
                  <ScrollViewer Name="PART_Scroller" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="0"
                                HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                    <Panel Name="PART_TextRoot" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="8 0 8 0">
                      <TextBlock Name="watermark" Classes="Subtitle1" Opacity="0.5" VerticalAlignment="Center"
                                 Text="{TemplateBinding Watermark}"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 TextAlignment="{TemplateBinding TextAlignment}"
                                 TextWrapping="{TemplateBinding TextWrapping}" />
                      <TextPresenter Name="PART_TextPresenter"
                                     VerticalAlignment="Center"
                                     Text="{TemplateBinding Text, Mode=TwoWay}"
                                     CaretIndex="{TemplateBinding CaretIndex}"
                                     SelectionStart="{TemplateBinding SelectionStart}"
                                     SelectionEnd="{TemplateBinding SelectionEnd}"
                                     TextAlignment="{TemplateBinding TextAlignment}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     PasswordChar="{TemplateBinding PasswordChar}"
                                     RevealPassword="{TemplateBinding RevealPassword}"
                                     SelectionBrush="{TemplateBinding SelectionBrush}"
                                     SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                     CaretBrush="{TemplateBinding CaretBrush}" />
                    </Panel>
                  </ScrollViewer>
                </Grid>
				        <Border Grid.Column="2" Background="{TemplateBinding assists:TextFieldAssist.InnerRightBackground}" CornerRadius="0 10 10 0" VerticalAlignment="Stretch">
				            <ContentPresenter Background="Transparent" Content="{TemplateBinding InnerRightContent}" Padding="{TemplateBinding assists:TextFieldAssist.InnerRightPadding}" HorizontalContentAlignment="Right" />
				        </Border>
              </Grid>
            </DataValidationErrors>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>

  <!-- ReSharper restore InconsistentNaming -->

  <!--<Design.PreviewWith>
    <Border Padding="20">
      <StackPanel>
        <TextBox Classes="" Margin="8" Width="200" UseFloatingWatermark="True"
                 assists:TextFieldAssist.Label="TextBox" />
        <TextBox Classes="Filled" Width="200" UseFloatingWatermark="True" Watermark="TextBox" />
        <TextBox Classes="Filled" IsEnabled="False" Width="200" UseFloatingWatermark="True" Watermark="TextBox" />
        <TextBox Classes="Outline" IsEnabled="True" Width="200" UseFloatingWatermark="True"
                 Watermark="TextBox3248239" />

      </StackPanel>
    </Border>
  </Design.PreviewWith>-->


  <!-- no-material class -->
  <Style Selector="TextBox.no-material">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignForeground}"/>
    <Setter Property="SelectionBrush" Value="{DynamicResource MaterialDesignSelection}" />
    <Setter Property="SelectionForegroundBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0,10,0,10" />
    <Setter Property="ContextMenu" Value="{StaticResource DefaultTextBoxContextMenu}" />
    <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
    <Setter Property="FontFamily" Value="avares://Neumorphism.Styles/Fonts/Roboto#Roboto, Arial" />
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="Height" Value="50"/>
    <Setter Property="Width" Value="200"/>
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Cursor" Value="Ibeam"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="TextAlignment" Value="Left"/>
    <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    <Setter Property="Template">
      <ControlTemplate>
        <TextPresenter Name="PART_TextPresenter"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Left"
                          Margin="0"
                          Text="{TemplateBinding Text, Mode=TwoWay}"
                          CaretIndex="{TemplateBinding CaretIndex}"
                          SelectionStart="{TemplateBinding SelectionStart}"
                          SelectionEnd="{TemplateBinding SelectionEnd}"
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextWrapping="{TemplateBinding TextWrapping}"
                          PasswordChar="{TemplateBinding PasswordChar}"
                          RevealPassword="{TemplateBinding RevealPassword}"
                          SelectionBrush="{TemplateBinding SelectionBrush}"
                          SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                          CaretBrush="{TemplateBinding CaretBrush}"/>
      </ControlTemplate>
    </Setter>
  </Style>
</Styles>
