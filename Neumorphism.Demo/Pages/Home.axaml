<UserControl xmlns="https://github.com/avaloniaui"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              mc:Ignorable="d"  
              xmlns:demo="clr-namespace:Neumorphism.Demo;assembly=Neumorphism.Demo"
              xmlns:styles="clr-namespace:Neumorphism.Styles;assembly=Neumorphism.Styles"
              xmlns:Test="clr-namespace:RenderDemo.Pages"
              xmlns:models="clr-namespace:Neumorphism.Demo.Models"
              xmlns:conv="clr-namespace:Neumorphism.Demo.Converters"
              xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
              xmlns:wpf="clr-namespace:Neumorphism.Styles.Assists;assembly=Neumorphism.Styles"
              x:Class="Neumorphism.Demo.Pages.Home">
	
  <UserControl.Resources>
    <conv:EnumDescriptionConverter x:Key="GetDescription"/>
  </UserControl.Resources>


  <UserControl.Styles>
    <Style>
      <Style.Resources>
        <DrawingGroup x:Key="AvaloniaLogo">
          <GeometryDrawing Geometry="m 150.66581 0.66454769 c -54.77764 0 -101.0652 38.86360031 -112.62109 90.33008031 a 26.1 26.1 0 0 1 18.92187 25.070312 26.1 26.1 0 0 1 -18.91992 25.08202 c 11.56024 51.46073 57.8456 90.31837 112.61914 90.31837 63.37832 0 115.40039 -52.02207 115.40039 -115.40039 0 -63.378322 -52.02207 -115.40039231 -115.40039 -115.40039231 z m 0 60.00000031 c 30.95192 0 55.40039 24.44847 55.40039 55.400392 0 30.9519 -24.44847 55.40039 -55.40039 55.40039 -30.95191 0 -55.40039 -24.44848 -55.40039 -55.40039 0 -30.951922 24.44848 -55.400392 55.40039 -55.400392 z">
            <GeometryDrawing.Brush>
              <SolidColorBrush Color="DarkGray"/>
            </GeometryDrawing.Brush>
          </GeometryDrawing>
          <GeometryDrawing Brush="DarkGray">
            <GeometryDrawing.Geometry>
              <EllipseGeometry Rect="9.6,95.8,40.6,40.6" />
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
          <GeometryDrawing Brush="DarkGray">
            <GeometryDrawing.Geometry>
              <RectangleGeometry Rect="206.06355, 114.56503,60,116.2" />
            </GeometryDrawing.Geometry>
          </GeometryDrawing>
        </DrawingGroup>
      </Style.Resources>
    </Style>
    </UserControl.Styles>



  <StackPanel Margin="16, 0" MaxWidth="800">
      <StackPanel.Styles>
        <Style Selector="TextBlock.Content, TextBlock.Subheadline">
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="TextAlignment" Value="Center"/>
          <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
      </StackPanel.Styles>
      <Image Width="1004" Height="301" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,50,0,40" Source="avares://Neumorphism.Demo/Assets/Neumorphism.png" Opacity="0"/>
      <!--<TextBlock Classes="Headline4 Subheadline" Text="👋 Welcome to Neumorphism.Avalonia Demo!"/>
      <TextBlock Classes="Content" Text="Neumorphism.Avalonia is a library that could beauty and turning your Avalonia Application from regular design to Material Design like Material Design in XAML! It easy for use to your project! Just install NuGet package, slightly change your App.xaml / App.axaml and your application are ready to go with Material Design!"/>
      <TextBlock Classes="Content" Text="This project is still in development. Not all controls are ready for use, and could be buggy. Don't worry! some basic controls (Buttons, Switch, TextBox and etc.) are ready for use for now! and other controls will be ready later!"/>
      <TextBlock Classes="Content" Text="Press drawer button to start widgets tours!"/>
      <TextBlock Classes="Content" Text="For attaching AvaloniaUI DevTools - Press Shift + F12."/>-->




      <StackPanel Margin="16">
        <StackPanel.Styles>
          <Style Selector="Button">
            <Setter Property="Margin" Value="15"/>
          </Style>
        </StackPanel.Styles>
        <WrapPanel HorizontalAlignment="Center" MaxWidth="800" >
          <Button Name="btn1" Command="{Binding Path=OpenProjectRepoLink}">
            <avalonia:MaterialIcon Kind="Github" Width="40" Height="40" Foreground="DarkGray" />
          </Button>
          <!--<Button Name="btn2" Width="200" Content="USE DARK THEME" Command="{Binding Path=UseMaterialUIDarkTheme}"/>
          <Button Name="btn3" Width="200" Content="USE LIGHT THEME" Command="{Binding Path=UseMaterialUILightTheme}"/>-->
          <Button Name="btn2" Width="200" Content="OPEN CONTROLS" Command="{Binding Path=OpenLeftDrawer}"/>
          <Button Name="btn4" Command="{Binding Path=OpenAvaloniaWebsiteLink}">
              <Viewbox Width="40" Height="40">
                <DrawingPresenter Drawing="{DynamicResource AvaloniaLogo}" />
              </Viewbox>
          </Button>
        </WrapPanel>
      </StackPanel>
      <StackPanel Margin="0,24">
        
        <DataGrid Height="620"
                  IsReadOnly="True"
                  Items="{Binding Path=DataContext.Features}"
                  VerticalAlignment="Stretch"
                  VerticalScrollBarVisibility="Disabled">
          <DataGrid.Columns>
            <DataGridTextColumn Header="Features"
                                Binding="{Binding FeatureName}"
                                Width="20*" />
            <DataGridTemplateColumn>
              <DataGridTemplateColumn.Header>
                <TextBlock TextAlignment="Right"
                           Text="Is Ready"
                           HorizontalAlignment="Stretch"/>
              </DataGridTemplateColumn.Header>
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock TextAlignment="Right" Text="{Binding Converter={StaticResource GetDescription}, Path=IsReady}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn>
              <DataGridTemplateColumn.Header>
                <TextBlock TextAlignment="Right"
                           Text="Is Animated"
                           HorizontalAlignment="Stretch"/>
              </DataGridTemplateColumn.Header>
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock TextAlignment="Right" Text="{Binding Converter={StaticResource GetDescription}, Path=IsAnimated}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
          </DataGrid.Columns>
        </DataGrid>
      </StackPanel>
    </StackPanel>
  </UserControl>
