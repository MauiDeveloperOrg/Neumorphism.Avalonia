<Styles xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="clr-namespace:Neumorphism.Avalonia.Styles.Additional.Animations"
    xmlns:controls="clr-namespace:Neumorphism.Avalonia.Styles.Controls"
    xmlns:styles="clr-namespace:Neumorphism.Avalonia.Styles"
    xmlns:assists="clr-namespace:Neumorphism.Avalonia.Styles.Assists"
    xmlns:converters="clr-namespace:Neumorphism.Avalonia.Styles.Converters">

	<Styles.Resources>
		<converters:RangeToSweepConverter x:Key="RangeToSweep" />
		<converters:ControlWidthToCornerRadiusConverter x:Key="ControlWidthToCornerRadiusConverter" />
		<converters:ControlWidthToBoxShadowConverter x:Key="ControlWidthToBoxShadowConverter" />
		<converters:WidthMinusValueConverter x:Key="WidthMinusValueConverter" />
		<converters:MultiWidthMinusValueConverter x:Key="MultiWidthMinusValueConverter" />
		<converters:WidthToCustomValueConverter x:Key="WidthToCustomValueConverter" />
		<converters:HeightToCornerRadiusConverter x:Key="HeightToCornerRadiusConverter" />
		<converters:ThicknessToIntConverter x:Key="ThicknessToIntConverter" />
		<converters:HeightToThicknessConverter x:Key="HeightToThicknessConverter" />
	</Styles.Resources>

	<!--Regular (no class) or Inset class-->
	<Style Selector="ProgressBar, ProgressBar.Inset">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="16" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Name="PART_RootBorder"
                            Background="Transparent"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
                            BoxShadow="{TemplateBinding Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=1}"
                            ClipToBounds="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<Panel Name="PART_RootPanel" ClipToBounds="True" HorizontalAlignment="Stretch">
							<Panel.RenderTransform>
								<ScaleTransform />
							</Panel.RenderTransform>

							<Canvas Name="PART_Container" HorizontalAlignment="Left" VerticalAlignment="Top" Height="{TemplateBinding Height}">
								<Border Name="PART_First" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" />
								<Border Name="PART_Second" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" />
							</Canvas>

							<Border Name="PART_Indicator" ClipToBounds="False" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" Background="{TemplateBinding Foreground}" />
						</Panel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--Class DeepInset-->
	<Style Selector="ProgressBar.DeepInset">
	</Style>


	<!--Class Outset-->
	<Style Selector="ProgressBar.Outset">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Margin="{TemplateBinding Margin}">
						<Border Name="PART_RootBorder"
								Background="Transparent"
								CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
								BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<Border.Styles>
									<Style Selector="Border#PART_RootBorder">
										<Setter Property="Width">
											<Setter.Value>
												<MultiBinding Converter="{StaticResource MultiWidthMinusValueConverter}" ConverterParameter="20%">
													<Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
													<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
												</MultiBinding>
											</Setter.Value>
										</Setter>
										<Setter Property="Height">
											<Setter.Value>
												<MultiBinding Converter="{StaticResource MultiWidthMinusValueConverter}" ConverterParameter="20%">
													<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
													<Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
												</MultiBinding>
											</Setter.Value>
										</Setter>
									</Style>
								</Border.Styles>

								<Border Name="PART_InnerBorder"
									  Background="Transparent"
									  CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
									  ClipToBounds="True"
									  BorderBrush="Transparent"
									  BorderThickness="0">
									<Border.Styles>
										<Style Selector="Border#PART_InnerBorder">
											<Setter Property="Width">
												<Setter.Value>
													<MultiBinding Converter="{StaticResource MultiWidthMinusValueConverter}" ConverterParameter="20%">
														<Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
														<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
													</MultiBinding>
												</Setter.Value>
											</Setter>
											<Setter Property="Height">
												<Setter.Value>
													<MultiBinding Converter="{StaticResource MultiWidthMinusValueConverter}" ConverterParameter="20%">
														<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
														<Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
													</MultiBinding>
												</Setter.Value>
											</Setter>
										</Style>
									</Border.Styles>
									<Panel Name="PART_RootPanel" ClipToBounds="True" HorizontalAlignment="Stretch">
										<Panel.RenderTransform>
											<ScaleTransform />
										</Panel.RenderTransform>

										<Canvas Name="PART_Container" HorizontalAlignment="Left" VerticalAlignment="Top" Height="{TemplateBinding Height}">
											<Border Name="PART_First" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=8}" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" />
											<Border Name="PART_Second" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=8}" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" />
										</Canvas>

										<Border Name="PART_Indicator" ClipToBounds="False" CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}" Background="{TemplateBinding Foreground}" />
									</Panel>
								</Border>
							</Border>
						</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- Transitions -->
	<Style Selector="ProgressBar:horizontal:not(.notransitions) /template/ Border#PART_Indicator">
		<Setter Property="Transitions">
			<Transitions>
				<DoubleTransition Property="Width" Duration="0:0:0.5" Easing="CubicEaseOut" />
			</Transitions>
		</Setter>
	</Style>

	<Style Selector="ProgressBar:vertical:not(.notransitions) /template/ Border#PART_Indicator">
		<Setter Property="Transitions">
			<Transitions>
				<DoubleTransition Property="Height" Duration="0:0:0.5" Easing="CubicEaseOut" />
			</Transitions>
		</Setter>
	</Style>

	<Style Selector="ProgressBar[IsVisible=true]:horizontal:not(.Circle):not(.notransitions) /template/ Panel#PART_RootPanel">
		<Style.Animations>
			<animations:BeginAnimation>
				<Animation Duration="0:0:1" FillMode="Both" Easing="CubicEaseOut">
					<KeyFrame Cue="0%">
						<Setter Property="Opacity" Value="0" />
						<Setter Property="ScaleTransform.ScaleX" Value="0" />
						<Setter Property="ScaleTransform.ScaleY" Value="1" />
					</KeyFrame>
					<KeyFrame Cue="100%">
						<Setter Property="Opacity" Value="1" />
						<Setter Property="ScaleTransform.ScaleX" Value="1" />
						<Setter Property="ScaleTransform.ScaleY" Value="1" />
					</KeyFrame>
				</Animation>
			</animations:BeginAnimation>
		</Style.Animations>
	</Style>



	<Style Selector="ProgressBar[IsVisible=true]:vertical:not(.Circle):not(.notransitions) /template/ Panel#PART_RootPanel">
		<Style.Animations>
			<animations:BeginAnimation>
				<Animation Duration="0:0:1" FillMode="Both" Easing="CubicEaseOut">
					<KeyFrame Cue="0%">
						<Setter Property="Opacity" Value="0" />
						<Setter Property="ScaleTransform.ScaleX" Value="1" />
						<Setter Property="ScaleTransform.ScaleY" Value="0" />
					</KeyFrame>
					<KeyFrame Cue="100%">
						<Setter Property="Opacity" Value="1" />
						<Setter Property="ScaleTransform.ScaleX" Value="1" />
						<Setter Property="ScaleTransform.ScaleY" Value="1" />
					</KeyFrame>
				</Animation>
			</animations:BeginAnimation>
		</Style.Animations>
	</Style>

	<!-- Setters for default statement of progress bar and its parts -->
	<Style Selector="ProgressBar /template/ Panel#PART_RootPanel">
		<Setter Property="Opacity" Value="1" />
		<Setter Property="ScaleTransform.ScaleX" Value="1" />
		<Setter Property="ScaleTransform.ScaleY" Value="1" />
	</Style>

	<Style Selector="ProgressBar:not(.Circle):horizontal /template/ Panel#PART_RootPanel">
		<Setter Property="RenderTransformOrigin" Value="0.0, 0.5" />
	</Style>

	<Style Selector="ProgressBar:not(.Circle, .Outset):vertical">
		<Setter Property="Width" Value="16" />
	</Style>

	<Style Selector="ProgressBar.Outset:not(.Circle):vertical">
		<Setter Property="Width" Value="20" />
	</Style>

	<Style Selector="ProgressBar:not(.Circle):vertical /template/ Border#PART_RootBorder">
		<Setter Property="CornerRadius" Value="{TemplateBinding Width, Converter={StaticResource HeightToCornerRadiusConverter}}" />
	</Style>

	<Style Selector="ProgressBar:not(.Circle):not(.DeepInset):vertical /template/ Border#PART_RootBorder">
		<Setter Property="BoxShadow" Value="{TemplateBinding Width, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=1}" />
	</Style>

	<Style Selector="ProgressBar:not(.Circle):vertical /template/ Border#PART_Indicator">
		<Setter Property="CornerRadius" Value="{TemplateBinding Width, Converter={StaticResource HeightToCornerRadiusConverter}}" />
	</Style>






	<Style Selector="ProgressBar:not(.Circle):vertical /template/ Panel#PART_RootPanel">
		<Setter Property="RenderTransformOrigin" Value="0.5, 0.0" />
	</Style>

	<Style
        Selector="ProgressBar:not(.Circle) /template/ Rectangle#PART_First,
                     ProgressBar:not(.Circle) /template/ Rectangle#PART_Second">
		<Setter Property="IsVisible" Value="False" />
	</Style>

	<!-- Horizontal animations indeterminate progress -->
	<Style Selector="ProgressBar:indeterminate:horizontal /template/ Canvas#PART_Container">
		<Setter Property="Width" Value="{TemplateBinding Width}" />
	</Style>

	<Style Selector="ProgressBar:indeterminate:horizontal /template/ Border#PART_First">
		<Setter Property="IsVisible" Value="True" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=-10%}" />
					<Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=10%}" />
				</KeyFrame>
				<KeyFrame Cue="35%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=45%}" />
					<Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=60%}" />
				</KeyFrame>
				<KeyFrame Cue="60%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>
	<Style Selector="ProgressBar:indeterminate:horizontal /template/ Border#PART_Second">
		<Setter Property="IsVisible" Value="True" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Left" Value="0" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="50%">
					<Setter Property="Canvas.Left" Value="0" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="70%">
					<Setter Property="Canvas.Left" Value="0" />
					<Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=70%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=95%}" />
					<Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=20%}" />
				</KeyFrame>
				<KeyFrame Cue="95%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Left" Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Width" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<!-- Vertical animations indeterminate progress -->
	<Style Selector="ProgressBar:indeterminate:vertical /template/ Canvas#PART_Container">
		<Setter Property="Width" Value="{TemplateBinding Width}" />
		<Setter Property="Height" Value="{TemplateBinding Height}" />
	</Style>


	<Style Selector="ProgressBar:indeterminate:vertical:not(.Outset) /template/ Border#PART_First">
		<Setter Property="IsVisible" Value="True" />
		<Setter Property="Width" Value="{TemplateBinding Width}" />
		<Setter Property="Height" Value="{TemplateBinding Height}" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=-10%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=10%}" />
				</KeyFrame>
				<KeyFrame Cue="35%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=45%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=60%}" />
				</KeyFrame>
				<KeyFrame Cue="60%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<Style Selector="ProgressBar.Outset:indeterminate:vertical /template/ Border#PART_First">
		<Setter Property="IsVisible" Value="True" />
		<!--aaaaaaaaaa-->

		
		<Setter Property="Width">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource MultiWidthMinusValueConverter}" ConverterParameter="20%">
					<Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
					<Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
				</MultiBinding>
			</Setter.Value>
		</Setter>
			
		
		
		
		<!--<Setter Property="Width" Value="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=8}" />-->
		<Setter Property="Height" Value="{TemplateBinding Height}" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=-10%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=10%}" />
				</KeyFrame>
				<KeyFrame Cue="35%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=45%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=60%}" />
				</KeyFrame>
				<KeyFrame Cue="60%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>



	<Style Selector="ProgressBar:indeterminate:vertical:not(.Outset) /template/ Border#PART_Second">
		<Setter Property="IsVisible" Value="True" />
		<Setter Property="Width" Value="{TemplateBinding Width}" />
		<Setter Property="Height" Value="{TemplateBinding Height}" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="50%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="70%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=70%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=95%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=20%}" />
				</KeyFrame>
				<KeyFrame Cue="95%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<Style Selector="ProgressBar.Outset:indeterminate:vertical /template/ Border#PART_Second">
		<Setter Property="IsVisible" Value="True" />
		<Setter Property="Width" Value="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=8}" />
		<Setter Property="Height" Value="{TemplateBinding Height}" />
		<Style.Animations>
			<Animation Duration="0:0:2" IterationCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="50%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="70%">
					<Setter Property="Canvas.Bottom" Value="0" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=70%}" />
				</KeyFrame>
				<KeyFrame Cue="90%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=95%}" />
					<Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=20%}" />
				</KeyFrame>
				<KeyFrame Cue="95%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Canvas.Bottom" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WidthToCustomValueConverter}, ConverterParameter=100%}" />
					<Setter Property="Height" Value="0" />
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<Style Selector="ProgressBar:horizontal /template/ Border#PART_Indicator">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>
	<Style Selector="ProgressBar:vertical /template/ Border#PART_Indicator">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
	</Style>

	<!--Class Light-->
	<Style Selector="ProgressBar.Light">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
	</Style>

	<!--Class Dark-->
	<Style Selector="ProgressBar.Dark">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
	</Style>

	<!--Class Accent-->
	<Style Selector="ProgressBar.Accent">
		<Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
	</Style>

	<!-- Class Circle -->
	<Style Selector="ProgressBar.Circle">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="Width" Value="64" />
		<Setter Property="Height" Value="64" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Margin="{TemplateBinding Margin}">
						<Border Name="PART_RootBorder"
								Background="Transparent"
								BorderBrush="Transparent"
								CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
								Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
								BorderThickness="0">
							<Panel Name="PART_RootPanel"
								   ClipToBounds="True"
								   Height="{Binding $self.Bounds.Width}">
								<Panel.RenderTransform>
									<ScaleTransform />
								</Panel.RenderTransform>

								<styles:CircularProgress Name="PART_Arc" StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToIntConverter}}"
													IsIndeterminate="{TemplateBinding IsIndeterminate}"
													Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30%}"
													Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30%}"
													Background="Transparent" StrokeBrush="{TemplateBinding BorderBrush}"
													ProgressValue="{Binding $parent[ProgressBar].Value}">
									<ContentPresenter Background="Transparent" Content="{TemplateBinding assists:ProgressBarAssist.CircularInnerContent}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
								</styles:CircularProgress>

								<Border Name="PART_Indicator" ClipToBounds="False" IsVisible="False" IsEnabled="False" />
							</Panel>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Class Circle Outline -->
	<Style Selector="ProgressBar.Circle.Outline">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="64" />
		<Setter Property="Height" Value="64" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Margin="{TemplateBinding Margin}">
						<Border Name="PART_RootBorder"
								Background="Transparent"
								BorderBrush="Transparent"
								CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
								Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
								BorderThickness="0">
							<Grid>
								<Border Name="PART_InnerBorder1" Background="Transparent"
									BorderBrush="Transparent"
									CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
									Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=35%}"
									Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=35%}"
									BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
									BorderThickness="0"/>
								<Border Name="PART_InnerBorder2" Background="Transparent"
									BorderBrush="Transparent"
									CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
									Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=45%}"
									Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=45%}"
									BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=1}"
									BorderThickness="0"/>
								<Panel Name="PART_RootPanel"
								       ClipToBounds="True"
								       Height="{Binding $self.Bounds.Width}">
									<Panel.RenderTransform>
										<ScaleTransform />
									</Panel.RenderTransform>

									<!--Stroke size is calculated automatically from control height-->
									<styles:CircularProgress Name="PART_Arc"
													    StrokeThickness="{TemplateBinding Height, Converter={StaticResource HeightToThicknessConverter}, ConverterParameter=10}"
													    IsIndeterminate="{TemplateBinding IsIndeterminate}"
													    Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=35%}"
													    Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=35%}"
													    Background="Transparent" StrokeBrush="{TemplateBinding BorderBrush}"
													    ProgressValue="{Binding $parent[ProgressBar].Value}">
										<ContentPresenter Background="Transparent" Content="{TemplateBinding assists:ProgressBarAssist.CircularInnerContent}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
									</styles:CircularProgress>

									<Border Name="PART_Indicator" ClipToBounds="False" IsVisible="False" IsEnabled="False" />
								</Panel>
							</Grid>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Class Circle Outline2 -->
	<Style Selector="ProgressBar.Circle.Outline2">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="64" />
		<Setter Property="Height" Value="64" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Margin="{TemplateBinding Margin}">
						<Border Name="PART_RootBorder"
								Background="Transparent"
								BorderBrush="Transparent"
								CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
								Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
								BorderThickness="0">
							<Grid>
								<Border Name="PART_InnerBorder1" Background="Transparent"
									BorderBrush="Transparent"
									CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
									Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=34%}"
									Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=34%}"
									BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=1}"
									BorderThickness="0"/>
								<Border Name="PART_InnerBorder2" Background="Transparent"
									BorderBrush="Transparent"
									CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
									Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=50%}"
									Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=50%}"
									BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=0}"
									BorderThickness="0"/>
								<Panel Name="PART_RootPanel"
								       ClipToBounds="True"
								       Height="{Binding $self.Bounds.Width}">
									<Panel.RenderTransform>
										<ScaleTransform />
									</Panel.RenderTransform>

									<!--Stroke size is calculated automatically from control height-->
									<styles:CircularProgress Name="PART_Arc"
													    StrokeThickness="{TemplateBinding Height, Converter={StaticResource HeightToThicknessConverter}, ConverterParameter=13}"
													    IsIndeterminate="{TemplateBinding IsIndeterminate}"
													    Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=27%}"
													    Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=27%}"
													    Background="Transparent" StrokeBrush="{TemplateBinding BorderBrush}"
													    ProgressValue="{Binding $parent[ProgressBar].Value}">
										<ContentPresenter Background="Transparent" Content="{TemplateBinding assists:ProgressBarAssist.CircularInnerContent}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
									</styles:CircularProgress>

									<Border Name="PART_Indicator" ClipToBounds="False" IsVisible="False" IsEnabled="False" />
								</Panel>
							</Grid>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Class CircleInset -->
	<Style Selector="ProgressBar.Circle.Inset">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="Background" Value="Red" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="Width" Value="64" />
		<Setter Property="Height" Value="64" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Margin="{TemplateBinding Margin}">
						<Border Name="PART_RootBorder"
								Background="Transparent"
								BorderBrush="Transparent"
								CornerRadius="{TemplateBinding Height, Converter={StaticResource HeightToCornerRadiusConverter}}"
								Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=24%}"
								BoxShadow="{Binding $self.Height, Converter={StaticResource ControlWidthToBoxShadowConverter}, ConverterParameter=1}"
								BorderThickness="0">




							<Panel Name="PART_RootPanel"
								   ClipToBounds="True"
								   Height="{Binding $self.Bounds.Width}">
								<Panel.RenderTransform>
									<ScaleTransform />
								</Panel.RenderTransform>

								<styles:CircularProgress Name="PART_Arc" StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToIntConverter}}"
																  IsIndeterminate="{TemplateBinding IsIndeterminate}"
																  Width="{TemplateBinding Width, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30%}"
																  Height="{TemplateBinding Height, Converter={StaticResource WidthMinusValueConverter}, ConverterParameter=30%}"
																  Background="Transparent" StrokeBrush="{TemplateBinding BorderBrush}"
											ProgressValue="{Binding $parent[ProgressBar].Value}">
									<ContentPresenter Background="Transparent" Content="{TemplateBinding assists:ProgressBarAssist.CircularInnerContent}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
								</styles:CircularProgress>

								<Border Name="PART_Indicator" ClipToBounds="False" IsVisible="False" IsEnabled="False" />
							</Panel>
						</Border>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>



	<Style Selector="ProgressBar.Circle /template/ Panel#PART_RootPanel">
		<Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
	</Style>

	<!-- Override Avalonia.Themes.Default parameter -->
	<Style Selector="ProgressBar:horizontal">
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
	</Style>
	<Style Selector="ProgressBar:vertical">
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
	</Style>


	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel>
				<ProgressBar IsIndeterminate="True" Width="300" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>
</Styles>